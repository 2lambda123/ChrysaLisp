(include 'sys/func.inc)
(include 'gui/window/class.inc)
(include 'class/str/class.inc)
(include 'class/num/class.inc)
(include 'class/lisp/class.inc)

(def-method 'window 'lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_create '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 1))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-push r6)
	(call 'vector 'get_first '(r7) '(_ r1))
	(call 'window 'create '((r1 num_value)) '(r1))
	(vp-pop r0)

	(exit 'window 'lisp_create '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(create-window flags)" error_msg_wrong_types r7))
	(signature 'sig 'num))

(def-func-end)

(def-method 'window 'lisp_connect_layout)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_connect_layout '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'connect_layout '(r0 (r1 num_value)) '(r0))
	(call 'window 'ref '(r0) '(r0))

	(exit 'window 'lisp_connect_layout '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-connect-layout window id)" error_msg_wrong_types r7))
	(signature 'sig 'window 'num))

(def-func-end)

(def-method 'window 'lisp_connect_close)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_connect_close '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'connect_close '(r0 (r1 num_value)) '(r0))
	(call 'window 'ref '(r0) '(r0))

	(exit 'window 'lisp_connect_close '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-connect-close window id)" error_msg_wrong_types r7))
	(signature 'sig 'window 'num))

(def-func-end)

(def-method 'window 'lisp_connect_min)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_connect_min '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'connect_min '(r0 (r1 num_value)) '(r0))
	(call 'window 'ref '(r0) '(r0))

	(exit 'window 'lisp_connect_min '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-connect-min window id)" error_msg_wrong_types r7))
	(signature 'sig 'window 'num))

(def-func-end)

(def-method 'window 'lisp_connect_max)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_connect_max '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'connect_max '(r0 (r1 num_value)) '(r0))
	(call 'window 'ref '(r0) '(r0))

	(exit 'window 'lisp_connect_max '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-connect-max window id)" error_msg_wrong_types r7))
	(signature 'sig 'window 'num))

(def-func-end)

(def-method 'window 'lisp_set_status)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_set_status '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-push r6)
	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'set_status '(r0 (& r1 str_data)) '(r0))
	(call 'window 'ref '(r0) '(r1))
	(vp-pop r0)

	(exit 'window 'lisp_set_status '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-set-status window str)" error_msg_wrong_types r7))
	(signature 'sig 'window 'str))

(def-func-end)

(def-method 'window 'lisp_set_title)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'window 'lisp_set_title '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(vp-push r6)
	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'window 'set_title '(r0 (& r1 str_data)) '(r0))
	(call 'window 'ref '(r0) '(r1))
	(vp-pop r0)

	(exit 'window 'lisp_set_title '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(window-set-title window str)" error_msg_wrong_types r7))
	(signature 'sig 'window 'str))

(def-func-end)
