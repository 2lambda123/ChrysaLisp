(include 'sys/func.inc)
(include 'gui/vdu/class.inc)
(include 'class/str/class.inc)
(include 'class/lisp/class.inc)

(def-method 'vdu 'lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'vdu 'lisp_create '(r0 r1))

(errorcases
	(class/array/get_length r1 r2)
	(gotoif '(r2 != 0) 'error))

	(vp-push r0)
	(call 'vdu 'create nil '(r1))
	(vp-pop r0)

	(exit 'vdu 'lisp_create '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(create-vdu)" error_msg_wrong_num_of_args r1)))

(def-func-end)

(def-method 'vdu 'lisp_print)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'vdu 'lisp_print '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error1))

	(defq in (method-input 'vdu 'print_cstr))
	(class/vector/bind_args r7 in '(vdu str))
	(call 'vdu 'print_cstr in '(r0))
	(call 'obj 'ref '(r0) '(r0))

	(exit 'vdu 'lisp_print '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error '(r6 "(vdu-print vdu str)" error_msg_wrong_types r7))
	(signature '(vdu str)))

(def-func-end)
