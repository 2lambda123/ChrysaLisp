(include 'sys/func.inc)
(include 'gui/text/class.inc)
(include 'gui/label/class.inc)
(include 'gui/flow/class.inc)

(gen-create 'label)
(gen-vtable 'label)

(def-method 'label 'init)
	;inputs
	;r0 = label object (ptr)
	;r1 = vtable (pptr)
	;outputs
	;r0 = label object (ptr)
	;r1 = 0 if error, else ok
	;trashes
	;all but r0

	(ptr 'this)
	(union
		'(ptr 'vtable)
		'(ulong 'ok))

	(push-scope)
	(entry 'label 'init {this, vtable})

	;init parent
	(s-call 'label 'init {this, vtable} {_, ok})
	(vpif {ok})
		;add my flow
		(call 'flow 'create nil {this->label_flow})
		(assign {0} {this->label_flow->view_flags})
		(call 'label 'add_child {this, this->label_flow})
		(call 'label 'set_long_prop {this, prop_flow_flags, flow_flag_right | flow_flag_align_vcenter})
		(call 'label 'set_long_prop {this, prop_border, 0})

		;add my text object
		(call 'text 'create nil {this->label_text})
		(call 'flow 'add_child {this->label_flow, this->label_text})
	(endif)

	(exit 'label 'init {this, ok})
	(pop-scope)
	(return)

(def-func-end)

(def-method 'label 'draw)
	;inputs
	;r0 = view object (ptr)
	;r1 = draw ctx (ptr)
	;trashes
	;all but r0

	(entry 'label 'draw '(r0 r1))

	;draw panel, in or out
	(vp-push r1)
	(call 'label 'get_long_prop '(r0 prop_border) '(r0 r1))
	(vp-pop r2)
	(call 'label 'draw_panel '(r0 r2 1 r1) '(r0))

	(exit 'label 'draw '(r0))
	(vp-ret)

(def-func-end)

(def-method 'label 'layout)
	;inputs
	;r0 = label object (ptr)
	;trashes
	;all but r0

	(entry 'label 'layout '(r0))

	(call 'label 'get_long_prop '(r0 prop_border) '(r0 r1))
	(vp-cpy-ir-ui r0 view_w r9)
	(vp-cpy-ir-ui r0 view_h r10)
	(vp-cpy-rr r1 r2)
	(vp-add-rr r2 r2)
	(vp-sub-rr r2 r9)
	(vp-sub-rr r2 r10)
	(vp-push r0)
	(call 'flow 'change '((r0 label_flow) r1 r1 r9 r10) '(r0))
	(call 'flow 'layout '(r0))
	(vp-pop r0)
	(call 'label 'get_long_prop '(r0 prop_color) '(r0 r1))
	(vp-shr-cr 24 r1)
	(vpif '(r1 == 0xff))
		(call 'label 'opaque '(r0) '(r0))
	(endif)

	(exit 'label 'layout '(r0))
	(vp-ret)

(def-func-end)

(def-method 'label 'pref_size)
	;inputs
	;r0 = label object (ptr)
	;outputs
	;r9 = preferred width (pixels)
	;r10 = preferred height (pixels)
	;trashes
	;all but r0

	(def-struct 'local)
		(ptr 'this)
		(uint 'depth 'mw 'mh)
	(def-struct-end)

	(vp-alloc local_size)
	(entry 'label 'pref_size '(r0))

	(vp-cpy-ri r0 rsp local_this)
	(call 'label 'get_long_prop '(r0 prop_border) '(r0 (rsp local_depth i)))
	(call 'label 'get_long_prop '(r0 prop_min_width) '(r0 (rsp local_mw i)))
	(call 'label 'get_long_prop '(r0 prop_min_height) '(r0 (rsp local_mh i)))
	(call 'flow 'pref_size '((r0 label_flow)) '(_ r9 r10))
	(vp-cpy-ir-ui rsp local_mw r7)
	(vp-cpy-ir-ui rsp local_mh r8)
	(vp-cpy-ir-ui rsp local_depth r1)
	(vpif '(r7 > r9))
		(vp-cpy-rr r7 r9)
	(endif)
	(vpif '(r8 > r10))
		(vp-cpy-rr r8 r10)
	(endif)
	(vp-add-rr r1 r1)
	(vp-add-rr r1 r9)
	(vp-add-rr r1 r10)

	(exit 'label 'pref_size '((rsp local_this) r9 r10))
	(vp-free local_size)
	(vp-ret)

(def-func-end)
