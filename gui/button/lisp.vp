(include 'sys/func.inc)
(include 'gui/button/class.inc)
(include 'class/num/class.inc)
(include 'class/lisp/class.inc)

(def-method 'button 'lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'button 'lisp_create '(r0 r1))

(errorcases
	(vp-cpy-ir-ui r1 array_length r2)
	(gotoif '(r2 != 0) 'error))

	(vp-push r0)
	(call 'button 'create nil '(r1))
	(vp-pop r0)

	(exit 'button 'lisp_create '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(create-button)" error_msg_wrong_num_of_args r1)))

(def-func-end)

(def-method 'button 'lisp_connect_click)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'button 'lisp_connect_click '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(call 'vector 'get_begin '(r7) '(_ r1))
	(vp-cpy-ir r1 0 r0)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'button 'connect_click '(r0 (r1 num_value)) '(r0))
	(call 'button 'ref '(r0) '(r0))

	(exit 'button 'lisp_connect_click '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(button-connect-click button id)" error_msg_wrong_types r7))
	(signature 'sig 'button 'num))

(def-func-end)
