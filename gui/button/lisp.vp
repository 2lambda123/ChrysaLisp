(include 'sys/func.inc)
(include 'gui/button/class.inc)
(include 'class/integer/class.inc)
(include 'class/lisp/class.inc)

(def-method 'button 'lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(vp-def (r_this r_args r_value) '(r6 r7))

	(entry 'button 'lisp_create (list r_this r_args))

(errorcases
	(d-call 'vector 'get_length (list r_args))
	(gotoif (list (method-output 'vector 'get_length 1) '!= 0) 'error1))

	(call 'button 'create nil (list r_value))

	(exit 'button 'lisp_create (list r_this r_value))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error (list r_this "(create-button)" error_msg_wrong_types r_args)))

(def-func-end)

(def-method 'button 'lisp_connect_click)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0 'arg1)

	(push-scope)
	(entry 'button 'lisp_connect_click {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2})
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'button 'connect_click {arg0, arg1})
	(call 'button 'ref {arg0} {value})

	(exit 'button 'lisp_connect_click {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(chain 'lisp 'repl_error {this, "(button-connect-click button id)", error_msg_wrong_types, args})
	(signature 'sig 'button 'integer))

	(pop-scope-syms)

(def-func-end)
