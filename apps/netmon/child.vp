(include 'sys/func.inc)
(include 'sys/kernel/class.inc)

(def-struct 'sample_msg)
	(ulong 'command)
	(struct 'reply_id 'id)
(def-struct-end)

(def-struct 'sample_reply_msg)
	(ulong 'command 'cpu 'task_count 'mem_used)
(def-struct-end)

(def-func 'apps/netmon/child)
	;monitor task

	(ptr 'msg 'data 'reply 'rdata)

	(push-scope)
	(loop-start)
		;read mail command
		(call 'sys_mail 'mymail nil {msg, data})
		(breakifnot {data->sample_msg_command})

		;sample reply
		(call 'sys_mail 'alloc {sample_reply_msg_size} {reply, rdata})
		(assign {data->sample_msg_reply_id.id_id} {reply->msg_dest.id_id})
		(assign {data->sample_msg_command} {rdata->sample_reply_msg_command})
		(call 'sys_kernel 'id nil {rdata->sample_reply_msg_cpu})
		(call 'sys_task 'count nil {rdata->sample_reply_msg_task_count})
		(call 'sys_mem 'used nil {rdata->sample_reply_msg_mem_used})
		(call 'sys_mail 'send {reply})
		(call 'sys_mail 'free {msg})

		;be friendly
		(call 'sys_task 'sleep '(0))
	(loop-end)

	(call 'sys_mail 'free {msg})
	(pop-scope)
	(return)

(def-func-end)
