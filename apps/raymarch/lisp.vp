(include 'sys/func.inc)
(include 'sys/math/class.inc)
(include 'class/num/class.inc)
(include 'gui/points/class.inc)
(include 'class/lisp/class.inc)

(defun scene ()
	(vec-frac 3)
	(vec-load 3 {0.5, 0.5, 0.5})
	(vec-sub 3)
	(vec-flength 3)
	(vec-load 1 {0.35})
	(vec-sub 1))

(def-func 'apps/raymarch/scene)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry '(r0 r1))

(errorcases
	(call 'lisp 'env_args_type '(r1 ($ sig) 1) '(r2))
	(gotoif '(r2 = 0) 'error))

	(class/array/bind_args r1 '(r2))

(errorcases
	(class/array/get_length r2 r1)
	(gotoif '(r1 /= 3) 'error))

	(vp-push r0)
	(class/array/get_begin r2 r2)
	(vec-set 0)
	(vec-load-long 3 r2)
	(scene)
	(call 'num 'create '(r0) '(r1))
	(vp-pop r0)

	(exit '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(scene points)" error_msg_wrong_types r1))
	(signature '(points)))

(def-func-end)

(def-func 'apps/raymarch/ray-march)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry '(r13 r14))

(errorcases
	(call 'lisp 'env_args_type '(r14 ($ sig) 6) '(r2))
	(gotoif '(r2 = 0) 'error))

	(class/array/bind_args r14 '(r0 r1 r2 r3 r4 r5))

(errorcases
	(class/array/get_length r0 r6)
	(gotoif '(r6 /= 3) 'error)
	(class/array/get_length r1 r6)
	(gotoif '(r6 /= 3) 'error))

	(vp-push r13)
	(class/array/get_begin r0 r0)
	(class/array/get_begin r1 r1)
	(class/num/get_values '(r2 r3 r4 r5))
	(assign '(1000 1.0) '(r6 r7))

	(vec-set 7)
	(loop-start)
		(breakif '(r6 = 0) '(r2 >= r3) '(r7 <= r4))
		(vp-sub-cr 1 r6)
		(vec-load-long 3 r0)
		(vec-load-long 3 r1)
		(vec-fscale 3 r2)
		(vec-add 3)
		(scene)
		(vec-dup 1)
		(vec-fmul 1 '(r5))
		(vp-add-rr (elem 0 (vec-pop 1)) r2)
	(loop-end)
	(vp-cpy-rr r2 r0)
	(vpif '(r7 > r4))
		(vp-cpy-rr r3 r0)
	(endif)
	(call 'num 'create '(r0) '(r1))
	(vp-pop r0)

	(exit '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r13 "(ray-march points points num num num num)" error_msg_wrong_types r14))
	(signature '(points points num num num num)))

(def-func-end)
