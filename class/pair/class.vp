(include 'sys/func.inc)
(include 'class/pair/class.inc)

(gen-create 'pair)
(gen-vtable 'pair)

(def-method 'pair 'deinit)
	;inputs
	;r0 = pair object (ptr)
	;trashes
	;all but r0

	(vp-push r0)
	(call 'obj 'deref '((r0 pair_first)))
	(vp-cpy-ir rsp 0 r0)
	(call 'obj 'deref '((r0 pair_second)))
	(vp-pop r0)
	(s-jump 'pair 'deinit '(r0))

(def-func-end)

(def-method 'pair 'ref_first)
	;inputs
	;r0 = pair object (ptr)
	;outputs
	;r0 = pair object (ptr)
	;r1 = object (ptr)
	;trashes
	;r2

	(vp-cpy-rr r0 r2)
	(call 'obj 'ref '((r0 pair_first)) '(r1))
	(vp-cpy-rr r2 r0)
	(vp-ret)

(def-func-end)

(def-method 'pair 'ref_second)
	;inputs
	;r0 = pair object (ptr)
	;outputs
	;r0 = pair object (ptr)
	;r1 = object (ptr)
	;trashes
	;r2

	(vp-cpy-rr r0 r2)
	(call 'obj 'ref '((r0 pair_second)) '(r1))
	(vp-cpy-rr r2 r0)
	(vp-ret)

(def-func-end)

(def-method 'pair 'set_first)
	;inputs
	;r0 = pair object (ptr)
	;r1 = object (ptr)
	;outputs
	;r0 = pair object (ptr)
	;trashes
	;all but r0

	(vp-push r0)
	(vp-cpy-ir r0 pair_first r2)
	(vp-cpy-ri r1 r0 pair_first)
	(call 'obj 'deref '(r2))
	(vp-pop r0)
	(vp-ret)

(def-func-end)

(def-method 'pair 'set_second)
	;inputs
	;r0 = pair object (ptr)
	;r1 = object (ptr)
	;outputs
	;r0 = pair object (ptr)
	;trashes
	;all but r0

	(vp-push r0)
	(vp-cpy-ir r0 pair_second r2)
	(vp-cpy-ri r1 r0 pair_second)
	(call 'obj 'deref '(r2))
	(vp-pop r0)
	(vp-ret)

(def-func-end)
