(include 'sys/func.inc)
(include 'class/slave/class.inc)
(include 'class/lisp/class.inc)

(def-method 'slave 'lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value 'stdin 'stdout 'stderr)
(errorcases
	(uint 'length))

	(push-scope)
	(entry 'slave 'lisp_create {this, args})

(errorcases
	(d-call 'vector 'get_length {args} {_, length})
	(gotoif {length} 'error1))

	(call 'slave 'create nil {value})
	(vpifnot {value})
		(call 'obj 'ref {this->lisp_sym_nil} {value})
	(else)
		;redirect lisp io
		(assign {this->lisp_stdin} {stdin})
		(assign {this->lisp_stdout} {stdout})
		(assign {this->lisp_stderr} {stderr})
		(call 'obj 'ref {value->slave_stdin} {this->lisp_stdin})
		(call 'obj 'ref {value->slave_stdout} {this->lisp_stdout})
		(call 'obj 'ref {value->slave_stderr} {this->lisp_stderr})
		(call 'obj 'deref {stdin})
		(call 'obj 'deref {stdout})
		(call 'obj 'deref {stderr})
	(endif)

	(exit 'slave 'lisp_create {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(create-slave)", error_msg_wrong_types, args}))

	(pop-scope-syms)

(def-func-end)

(def-method 'slave 'lisp_get_args)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0)

	(push-scope)
	(entry 'slave 'lisp_get_args {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 1} '(r1))
	(gotoif '(r1 == 0) 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'slave 'get_args {arg0} {_, arg0})
	(vpifnot {arg0})
		(assign {this->lisp_sym_nil} {arg0})
	(endif)
	(call 'obj 'ref {arg0} {value})

	(exit 'slave 'lisp_get_args {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(slave-get-args slave)", error_msg_wrong_types, args})
	(signature 'sig 'slave))

	(pop-scope-syms)

(def-func-end)
