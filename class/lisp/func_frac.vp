(include 'sys/func.inc)
(include 'sys/math/class.inc)
(include 'class/integer/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_frac)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'value)
	(union
		'(ptr 'args)
		'(long 'num))

	(push-scope)
	(entry 'lisp 'func_frac {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 1})
	(errorif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'vector 'get_first {args} {_, value})
	(call 'integer 'get_value {value} {_, num})
	(vec-set 0)
	(vec-load 1 {num})
	(vec-frac 1)
	(vec-store 1 {num})
	(call 'integer 'create {num} {value})

	(exit 'lisp 'func_frac {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(frac num)", error_msg_wrong_types, args})
	(return)
	(signature 'sig 'integer))

	(pop-scope-syms)

(def-func-end)
