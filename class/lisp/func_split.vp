(include 'sys/func.inc)
(include 'class/string/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_split)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(entry 'lisp 'func_split '(r0 r1))

	(vp-cpy-rr r0 r6)
	(vp-cpy-rr r1 r7)

(errorcases
	(call 'lisp 'env_args_type '(r1 ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'vector 'get_begin '(r7) '(_ r1))
	(vp-cpy-ir r1 ptr_size r2)
	(vp-push r6)
	(call 'string 'split '((r1 0) (r2 string_data ub)) '(_ r1))
	(vp-pop r0)

	(exit 'lisp 'func_split '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error '(r6 "(split str char)" error_msg_wrong_types r7))
	(signature 'sig 'string 'string))

(def-func-end)
