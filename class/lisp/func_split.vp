(include 'sys/func.inc)
(include 'class/string/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_split)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(vp-def (r_this r_args r_iter_begin r_value) '(r6 r7 r2 r1))

	(entry 'lisp 'func_split (list r_this r_args))

(errorcases
	(call 'lisp 'env_args_type `(,r_args ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'vector 'get_begin (list r_args) (list '_ r_iter_begin))
	(vp-cpy-ir r_iter_begin ptr_size r_value)
	(call 'string 'split `((,r_iter_begin 0) (,r_value string_data ub)) (list '_ r_value))

	(exit 'lisp 'func_split (list r_this r_value))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error (list r_this "(split str char)" error_msg_wrong_types r_args))
	(signature 'sig 'string 'string))

(def-func-end)
