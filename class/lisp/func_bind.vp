(include 'sys/func.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_bind)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(ptr 'this)
	(union
		'(ptr 'args)
		'(pptr 'iter_begin))
	(uint 'length)

	(push-scope)
	(entry 'lisp 'func_bind {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(errorif {length != 2} 'error1)
	(call 'vector 'get_begin {args} {_, iter_begin})
	(call 'lisp 'env_bind {this, iter_begin[0], iter_begin[ptr_size]} {_, args})

	(exit 'lisp 'func_bind {this, args})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(bind (param ...) seq)", error_msg_wrong_num_of_args, args}))

	(pop-scope-syms)

(def-func-end)
