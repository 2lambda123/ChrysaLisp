(include 'sys/func.inc)
(include 'class/str/class.inc)
(include 'class/func/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_eql)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'lisp 'func_eql '(r0 r1))

(errorcases
	(assign '((r1 array_length)) '(r2))
	(gotoif '(r2 /= 2) 'error))

	(class/array/bind_args r1 '(r2 r3))
	(gotoif '(r2 = r3) 'same)
	(switch)
	(assign '((r2 obj_vtable) (r3 obj_vtable) (r0 lisp_sym_nil)) '(r4 r5 r1))
	(breakif '(r4 /= r5))
	(f-bind 'str 'vtable r5)
	(f-bind 'func 'vtable r6)
	(f-bind 'num 'vtable r7)
	(vpcase '(r4 = r5))
		(vp-cpy-rr r0 r7)
		(call 'str 'same '(r2 r3) '(_ r1))
		(vp-cpy-rr r7 r0)
		(gotoif '(r1 = 0) 'same)
		(assign '((r0 lisp_sym_nil)) '(r1))
		(break)
	(vpcase '(r4 = r6))
		(class/num/get_values '(r2 r3))
		(breakif '(r2 /= r3))
		(assign '((r0 lisp_sym_t)) '(r1))
		(break)
	(vpcase '(r4 = r7))
		(class/num/get_values '(r2 r3))
		(breakif '(r2 /= r3))
	(vp-label 'same)
		(assign '((r0 lisp_sym_t)) '(r1))
	(endswitch)
	(class/obj/ref r1 r2)

	(exit 'lisp 'func_eql '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(eql form form)" error_msg_wrong_num_of_args r1)))

(def-func-end)
