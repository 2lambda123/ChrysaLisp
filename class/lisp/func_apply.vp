(include 'sys/func.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_apply)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'lisp 'func_apply '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error))

	(class/array/bind_args r7 '(r2 r1))
	(jump 'lisp 'repl_apply '(r6 r1 r2))

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(apply lambda list)" error_msg_wrong_types r7))
	(signature '(obj vector)))

(def-func-end)
