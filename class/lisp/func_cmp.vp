(include 'sys/func.inc)
(include 'class/string/class.inc)
(include 'class/integer/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_cmp)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(vp-def (r_this r_args r_value r_iter_begin r_arg1 r_arg2) '(r6 r7))

	(entry 'lisp 'func_cmp (list r_this r_args))

(errorcases
	(call 'lisp 'env_args_type `(,r_args ($ sig) 2))
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error))

	(call 'vector 'get_begin (list r_args) (list '_ r_iter_begin))
	(vp-cpy-ir r_iter_begin 0 r_arg1)
	(vp-cpy-ir r_iter_begin ptr_size r_arg2)
	(vp-xor-rr r_value r_value)
	(vpif (list r_arg1 '!= r_arg2))
		(call 'string 'compare (list r_arg1 r_arg2) (list '_ r_value))
	(endif)
	(call 'integer 'create (list r_value) (list r_value))

	(exit 'lisp 'func_cmp (list r_this r_value))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error (list r_this "(cmp str str)" error_msg_wrong_types r_args))
	(signature 'sig 'string 'string))

(def-func-end)
