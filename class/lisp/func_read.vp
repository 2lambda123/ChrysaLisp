(include 'sys/func.inc)
(include 'class/num/class.inc)
(include 'class/stream/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_read)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(ptr 'this 'args 'value 'form)
	(int 'next_char)

	(push-scope)
	(entry 'lisp 'func_read {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2} '(r2))
	(gotoif '(r2 = 0) 'error1))

	(call 'vector 'get_first {args} {_, value})
	(call 'vector 'get_second {args} {_, args})
	(call 'num 'get_value {args} {_, next_char})
	(call 'lisp 'read {this, value, next_char} {_, form, next_char})

	(call 'num 'create {next_char} {args})
	(call 'vector 'create nil {value})
	(call 'vector 'push_back2 {value, form, args})

	(exit 'lisp 'func_read {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(read stream last_char)", error_msg_wrong_types, args})
	(signature '(stream num)))

	(pop-scope-syms)

(def-func-end)
