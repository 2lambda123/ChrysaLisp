(include 'sys/func.inc)
(include 'class/str/class.inc)
(include 'class/num/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_throw)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'lisp 'func_throw '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error))

	(defq in (method-input 'lisp 'repl_error))
	(vp-cpy-rr r6 (elem 0 in))
	(vp-xor-rr (elem 2 in) (elem 2 in))
	(class/vector/bind_args r7 in '(_ str _ obj))
	(jump 'lisp 'repl_error in)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(throw str form)" error_msg_wrong_types r7))
	(signature '(str obj)))

(def-func-end)
