(include 'sys/func.inc)
(include 'class/str/class.inc)
(include 'class/num/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_throw)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'lisp 'func_throw '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error))

	(vp-cpy-ir r7 array_array r1)
	(vp-cpy-ir r1 0 r2)
	(jump 'lisp 'repl_error '(r6 (& r2 str_data) 0 (r1 ptr_size)))

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(throw str form)" error_msg_wrong_types r7))
	(signature 'sig 'str 'obj))

(def-func-end)
