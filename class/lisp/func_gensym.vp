(include 'sys/func.inc)
(include 'class/symbol/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_gensym)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'prefix 'value)
(errorcases
	(uint 'length))

	(push-scope)
	(entry 'lisp 'func_gensym {this, args})

(errorcases
	(d-call 'vector 'get_length {args} {_, length})
	(errorif {length} 'error1))

	(call 'symbol 'create_from_long {this->lisp_nextsym = this->lisp_nextsym + 1, 10} {args})
	(call 'symbol 'create_from_cstr {"G"} {prefix})
	(call 'symbol 'append {prefix, args} {value})
	(call 'obj 'deref {prefix})
	(call 'obj 'deref {args})
	(call 'symbol 'intern {value} {value})

(vp-label 'funcexit)
	(exit 'lisp 'func_gensym {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(gensym)", error_msg_wrong_num_of_args, args} {_, value})
	(goto 'funcexit))

	(pop-scope-syms)

(def-func-end)
