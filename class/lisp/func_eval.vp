(include 'sys/func.inc)
(include 'class/hmap/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_eval)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(ptr 'this 'args 'env 'old)
	(uint 'length)

	(push-scope)
	(entry 'lisp 'func_eval {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(vpif {length == 1})
		(call 'vector 'get_first {args} {_, args})
		(call 'lisp 'repl_eval {this, args} {_, args})
	(else)
		(errorif {length != 2} 'error1)
		(call 'vector 'get_second {args} {_, env})
	(errorcases
		(call 'obj 'inst_of (cat {env, @} (f-path 'hmap 'vtable)))
		(gotoif `(,(method-output 'obj 'inst_of 1) == 0) 'error2))
		(assign {this->lisp_environment} {old})
		(assign {env} {this->lisp_environment})
		(call 'vector 'get_first {args} {_, args})
		(call 'lisp 'repl_eval {this, args} {_, args})
		(assign {old} {this->lisp_environment})
	(endif)

	(exit 'lisp 'func_eval {this, args})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(eval form [env])", error_msg_wrong_num_of_args, args})
(vp-label 'error2)
	(jump 'lisp 'repl_error {this, "(eval form [env])", error_msg_not_an_environment, args}))

	(pop-scope-syms)

(def-func-end)
