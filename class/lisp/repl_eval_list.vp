(include 'sys/func.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'repl_eval_list)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = list vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(def-struct 'local)
		(ptr 'this)
		(pptr 'iter_begin)
		(pptr 'iter_end)
	(def-struct-end)

	(vp-alloc local_size)
	(entry 'lisp 'repl_eval_list '(r0 r1))

	(class/array/get_begin r1 r3)
	(class/array/get_length r1 r2)
	(vp-cpy-ir r0 lisp_sym_nil r1)
	(switch 'exit)
	(vpcase '(r2 != 0))
		(vp-shl-cr (log2 long_size) r2)
		(vp-add-rr r3 r2)
		(vp-cpy-ri r0 rsp local_this)
		(vp-cpy-ri r2 rsp local_iter_end)
		(loop-start)
			(vp-cpy-ri r3 rsp local_iter_begin)
			(call 'lisp 'repl_eval '(r0 (r3 0)) '(r0 r1))
		(errorcases
			(f-bind 'error 'vtable r2)
			(vp-cpy-ir r1 obj_vtable r3)
			(breakif '(r2 == r3) 'exit))
			(vp-cpy-ir rsp local_iter_begin r3)
			(vp-cpy-ir r3 0 r0)
			(vp-cpy-ri r1 r3 0)
			(call 'obj 'deref '(r0))
			(vp-cpy-ir rsp local_this r0)
			(vp-cpy-ir rsp local_iter_begin r3)
			(vp-cpy-ir rsp local_iter_end r2)
			(vp-add-cr ptr_size r3)
		(loop-until '(r3 == r2))
		(vp-cpy-ir r3 (neg ptr_size) r1)
	(default)
		(class/obj/ref r1 r2)
	(endswitch)

	(exit 'lisp 'repl_eval_list '(r0 r1))
	(vp-free local_size)
	(vp-ret)

(def-func-end)
