(include 'sys/func.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'repl_eval_list)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = list vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(def-struct 'local)
		(ptr 'this 'value)
		(pptr 'iter_begin 'iter_end)
	(def-struct-end)

	(vp-def (r_this r_value r_iter_end r_iter_begin r_vtable r_error))

	(vp-alloc local_size)
	(entry 'lisp 'repl_eval_list (list r_this r_value))
	(vp-cpy-ri r_this rsp local_this)
	(call 'vector 'get_iters (list r_value) (list '_ r_iter_begin r_iter_end))
	(vp-cpy-ir rsp local_this r_this)
	(vp-cpy-ir r_this lisp_sym_nil r_value)
	(loop-while (list r_iter_begin '!= r_iter_end))
		(vp-cpy-ri r_iter_begin rsp local_iter_begin)
		(vp-cpy-ri r_iter_end rsp local_iter_end)
		(call 'lisp 'repl_eval `(,r_this (,r_iter_begin 0)) (list r_this r_value))
	(errorcases
		(vp-cpy-ir r_value obj_vtable r_vtable)
		(f-bind 'error 'vtable r_error)
		(errorif (list r_error '== r_vtable) 'funcexit))
		(vp-cpy-ir rsp local_iter_begin r_iter_begin)
		(vp-cpy-ri r_value rsp local_value)
		(call 'obj 'deref `((,r_iter_begin 0)))
		(vp-cpy-ir rsp local_value r_value)
		(vp-cpy-ir rsp local_iter_begin r_iter_begin)
		(vp-cpy-ir rsp local_iter_end r_iter_end)
		(vp-cpy-ir rsp local_this r_this)
		(vp-cpy-ri r_value r_iter_begin 0)
		(vp-add-cr ptr_size r_iter_begin)
	(loop-end)
	(call 'obj 'ref (list r_value) (list r_value))
	(vp-cpy-ir rsp local_this r_this)

(vp-label 'funcexit)
	(exit 'lisp 'repl_eval_list (list r_this r_value))
	(vp-free local_size)
	(vp-ret)

(def-func-end)
