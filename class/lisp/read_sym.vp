(include 'sys/func.inc)
(include 'sys/load/class.inc)
(include 'class/sym/class.inc)
(include 'class/stream_str/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'read_sym)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = stream object (ptr)
	;r2 = next char (uint)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0
	;r2 = next char (uint)

	(ptr 'this 'stream)
	(union
		(ptr 'str_stream 'value)
		(pubyte 'bufp 'bufe))
	(int 'fchar 'char)

	(push-scope)
	(entry 'lisp 'read_sym {this, stream, char})

	(switch)
		(assign {stream->stream_bufp, stream->stream_bufe, char} {bufp, bufe, fchar})
		(loop-whilenot {char <= char_space || char = char_lrb || char = char_rrb || char = char_quote})
			(gotoif {bufp = bufe} 'slow_but_sure)
			(assign {*bufp} {char})
			(assign {bufp + byte_size} {bufp})
		(loop-end)
		(call 'sym 'create_from_buffer {stream->stream_bufp - byte_size, bufp - stream->stream_bufp} {value})
		(assign {bufp} {stream->stream_bufp})
	(else)
	(vp-label 'slow_but_sure)
		(assign {fchar} {char})
		(call 'sym 'create_from_buffer {0, str_gap} {value})
		(call 'stream_str 'create {value} {str_stream})
		(loop-whilenot {char <= char_space || char = char_lrb || char = char_rrb || char = char_quote})
			(call 'stream 'write_char {str_stream, char})
			(call 'stream 'read_char {stream} {_, char})
		(loop-end)
		(call 'stream_str 'ref_string {str_stream} {_, value})
		(call 'stream_str 'destroy {str_stream})
	(endswitch)
	(call 'sym 'intern {value} {value})

	(exit 'lisp 'read_sym {this, value, char})
	(pop-scope)
	(return)

(def-func-end)
