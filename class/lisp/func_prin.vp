(include 'sys/func.inc)
(include 'class/str/class.inc)
(include 'class/stream/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_prin)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'value)
	(union
		'(pptr 'iter_end)
		'(ptr 'args))
	(union
		'(pptr 'iter_begin)
		'(uint 'length))

	(push-scope)
	(entry 'lisp 'func_prin {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(vpif {length})
		(call 'vector 'get_iters {args} {_, iter_begin, iter_end})
		(loop-start)
			(assign {*iter_begin} {value})
			(vpif (cat {value->obj_vtable == @} (f-path 'str 'vtable)))
				(call 'stream 'write {this->lisp_stdout, &value->str_data, value->str_length})
			(else)
				(call 'lisp 'repl_print {this, this->lisp_stdout, value})
			(endif)
		(loop-until {(iter_begin + ptr_size => iter_begin) == iter_end})
	(else)
		(assign {this->lisp_sym_nil} {value})
	(endif)
	(call 'obj 'ref {value})

	(exit 'lisp 'func_prin {this, value})
	(pop-scope)
	(return)

(def-func-end)
