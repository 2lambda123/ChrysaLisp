(include 'sys/func.inc)
(include 'class/str/class.inc)
(include 'class/stream/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_prin)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(ptr 'this 'value)
	(union
		(ptr 'args)
		(pptr 'iter_begin 'iter_end))

	(push-scope)
	(entry 'lisp 'func_prin {this, args})

	(assign {this->lisp_sym_nil} {value})
	(call 'vector 'get_both {args} '(_ r1 r2))
	(assign '(r2) {iter_end})
	(loop-while '(r1 /= r2))
		(vp-cpy-ir r1 0 r0)
		(assign '(r1 r0) {iter_begin, value})
		(assign '((r0 obj_vtable)) '(r1))
		(f-bind 'str 'vtable r2)
		(vpif '(r1 = r2))
			(call 'stream 'write {this->lisp_stdout, &value->str_data, value->str_length})
		(else)
			(call 'lisp 'repl_print {this, this->lisp_stdout, value})
		(endif)
		(assign {iter_begin, iter_end} '(r1 r2))
		(vp-add-cr ptr_size r1)
	(loop-end)
	(call 'obj 'ref {value})

	(exit 'lisp 'func_prin {this, value})
	(pop-scope)
	(return)

(def-func-end)
