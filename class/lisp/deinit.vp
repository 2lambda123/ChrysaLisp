(include 'sys/func.inc)
(include 'class/lisp/class.inc)
(include 'class/symbol/class.inc)

(def-method 'lisp 'deinit)
	;inputs
	;r0 = lisp object (ptr)
	;trashes
	;all but r0

	(ptr 'this)
	(pptr 'iter)

	(push-scope)
	(entry 'lisp 'deinit {this})

	;deinit myself
	(assign {&this->lisp_stdin} {iter})
	(loop-start)
		(call 'obj 'deref {*iter})
	(loop-until {(iter + ptr_size => iter) == &this->lisp_nextsym})

	;flush interned symbols
	(call 'symbol 'flush)

	;deinit parent
	(exit 'lisp 'deinit {this})
	(pop-scope)
	(s-jump 'lisp 'deinit '(r0))

(def-func-end)
