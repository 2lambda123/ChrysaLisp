(include 'sys/func.inc)
(include 'sys/kernel/class.inc)
(include 'class/num/class.inc)
(include 'class/str/class.inc)
(include 'class/lisp/class.inc)

(def-method 'sys_kernel 'lisp_total)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_kernel 'lisp_total '(r0 r1))

(errorcases
	(class/array/get_length r1 r2)
	(gotoif '(r2 != 0) 'error))

	(vp-cpy-rr r0 r6)
	(call 'sys_kernel 'total nil '(r0))
	(call 'num 'create '(r0) '(r0))

	(exit 'sys_kernel 'lisp_total '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(kernel-total)" error_msg_wrong_types r1)))

(def-func-end)

(def-method 'sys_kernel 'lisp_declare)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_kernel 'lisp_declare '(r11 r12))

(errorcases
	(call 'lisp 'env_args_type '(r12 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error))

	(class/array/get_begin r12 r1)
	(vp-cpy-ir r1 0 r12)
	(vp-cpy-ir r1 ptr_size r1)
	(call 'sys_kernel 'declare '((& r12 str_data) (r1 num_value)))
	(call 'obj 'ref '(r12) '(r0))

	(exit 'sys_kernel 'lisp_declare '(r11 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r11 "(kernel-declare name mbox)" error_msg_wrong_types r12))
	(signature 'sig 'str 'num))

(def-func-end)

(def-method 'sys_kernel 'lisp_debug)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_kernel 'lisp_debug '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 1) '(r1))
	(gotoif '(r1 == 0) 'error))

	(class/array/get_begin r7 r1)
	(vp-cpy-ir r1 0 r0)
	(vp-push r6 r0)
	(call 'sys_kernel 'debug '((& r0 str_data)))
	(vp-pop r6 r0)
	(call 'obj 'ref '(r0) '(r0))

	(exit 'sys_kernel 'lisp_debug '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(kernel-debug str)" error_msg_wrong_types r7))
	(signature 'sig 'str))

(def-func-end)
