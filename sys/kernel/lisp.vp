(include 'sys/func.inc)
(include 'sys/kernel/class.inc)
(include 'class/integer/class.inc)
(include 'class/string/class.inc)
(include 'class/lisp/class.inc)

(def-method 'sys_kernel 'lisp_total)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(vp-def (r_this r_args r_value r_len) '(r3 r4))

	(entry 'sys_kernel 'lisp_total (list r_this r_args))

(errorcases
	(d-call 'vector 'get_length (list r_args) (list '_ r_len))
	(gotoif (list r_len '!= 0) 'error1))

	(call 'sys_kernel 'total nil (list r_value))
	(call 'integer 'create (list r_value) (list r_value))

	(exit 'sys_kernel 'lisp_total (list r_this r_value))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error (list r_this "(kernel-total)" error_msg_wrong_types r_args)))

(def-func-end)

(def-method 'sys_kernel 'lisp_declare)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0 'arg1)

	(push-scope)
	(entry 'sys_kernel 'lisp_declare {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2})
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'sys_kernel 'declare {&arg0->string_data, arg1})
	(call 'obj 'ref {arg0} {value})

	(exit 'sys_kernel 'lisp_declare {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(kernel-declare name mbox)", error_msg_wrong_types, args})
	(signature 'sig 'string 'integer))

	(pop-scope-syms)

(def-func-end)

(def-method 'sys_kernel 'lisp_debug)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0)

	(push-scope)
	(entry 'sys_kernel 'lisp_debug {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 1})
	(gotoif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'sys_kernel 'debug {&arg0->string_data})
	(call 'obj 'ref {arg0} {value})

	(exit 'sys_kernel 'lisp_debug {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(kernel-debug str)", error_msg_wrong_types, args})
	(signature 'sig 'string))

	(pop-scope-syms)

(def-func-end)
