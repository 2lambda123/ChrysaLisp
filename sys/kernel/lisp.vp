(include 'sys/func.inc)
(include 'sys/kernel/class.inc)
(include 'class/num/class.inc)
(include 'class/str/class.inc)
(include 'class/lisp/class.inc)

(def-method 'sys_kernel 'lisp_total)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sys_kernel 'lisp_total '(r0 r1))

(errorcases
	(assign '((r1 array_length)) '(r2))
	(gotoif '(r2 /= 0) 'error))

	(vp-push r0)
	(call 'sys_kernel 'total nil '(r0))
	(call 'num 'create '(r0) '(r1))
	(vp-pop r0)

	(exit 'sys_kernel 'lisp_total '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(kernel-total)" error_msg_wrong_types r1)))

(def-func-end)

(def-method 'sys_kernel 'lisp_declare)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sys_kernel 'lisp_declare '(r11 r12))

(errorcases
	(call 'lisp 'env_args_type1 '(r12 ($ sig) 2) '(r2))
	(gotoif '(r2 = 0) 'error))

	(defq in (method-input 'sys_kernel 'declare))
	(class/array/bind_args r12 in)
	(vp-cpy-rr (elem 0 in) r12)
	(class/vector/cast_args in '(str num))
	(call 'sys_kernel 'declare in)
	(call 'obj 'ref '(r12) '(r0))

	(exit 'sys_kernel 'lisp_declare '(r11 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r11 "(kernel-declare name mbox)" error_msg_wrong_types r12))
	(signature '(str num)))

(def-func-end)

(def-method 'sys_kernel 'lisp_debug)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sys_kernel 'lisp_debug '(r0 r1))

(errorcases
	(call 'lisp 'env_args_type1 '(r1 ($ sig) 1) '(r2))
	(gotoif '(r2 = 0) 'error))

	(vp-push r0)
	(defq in (method-input 'sys_kernel 'debug))
	(class/array/bind_args r1 in)
	(vp-push (elem 0 in))
	(class/vector/cast_args in '(str))
	(call 'sys_kernel 'debug in)
	(vp-pop r1)
	(class/obj/ref r1 r2)
	(vp-pop r0)

	(exit 'sys_kernel 'lisp_debug '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(kernel-debug str)" error_msg_wrong_types r1))
	(signature '(str)))

(def-func-end)
