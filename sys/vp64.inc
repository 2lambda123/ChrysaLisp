;;;;;;;;;;;;;;;;;;;;;
; VP64 Emit Functions
;;;;;;;;;;;;;;;;;;;;;

(defun reg (r)
	(find-rev r '(r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 rsp)))

(defcvar 'stack_align 16 'stack_state '(r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14))

(defun stack-init ()
	(defq tk_state_size (* ptr_size (length stack_state)))
	(vp-sub-cr (+ tk_state_size (* ptr_size 2)) r1)
	(f-bind 'sys_task :stop r2)
	(vp-cpy-ri r2 r1 (+ tk_state_size ptr_size))
	(vp-cpy-ri r4 r1 tk_state_size))

(defun emit-cr (c r op)
	(cond
		((<= -0x8 c 0x7)
			(emit-short (+ op (<< (reg r) 8) (<< c 12))))
		((<= -0x80000 c 0x7ffff)
			(emit-short (+ (inc op) (<< (reg r) 8) (<< c 12)) (>>> c 4)))
		((<= -0x800000000 c 0x7ffffffff)
			(emit-short (+ (+ op 2) (<< (reg r) 8) (<< c 12)) (>>> c 4) (>>> c 20)))
		(t	(emit-short (+ (+ op 3) (<< (reg r) 8) (<< c 12)) (>>> c 4) (>>> c 20) (>>> c 36)))))

(defun emit-cpy-cr (c r) (emit-cr c r 0x00))
(defun emit-add-cr (c r) (emit-cr c r 0x04))
(defun emit-sub-cr (c r) (emit-cr c r 0x08))
(defun emit-cmp-cr (c r) (emit-cr c r 0x10))
(defun emit-mul-cr (c r) (emit-cr c r 0x14))
(defun emit-and-cr (c r) (emit-cr c r 0x18))
(defun emit-or-cr (c r) (emit-cr c r 0x20))
(defun emit-xor-cr (c r) (emit-cr c r 0x24))
(defun emit-shl-cr (c r) (emit-cr c r 0x28))
(defun emit-shr-cr (c r) (emit-cr c r 0x30))
(defun emit-asr-cr (c r) (emit-cr c r 0x34))

(defun emit-cpy-rr (s d) (emit-short (+ 0x35 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-add-rr (s d) (emit-short (+ 0x36 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-sub-rr (s d) (emit-short (+ 0x37 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-cmp-rr (s d) (emit-short (+ 0x38 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-mul-rr (s d) (emit-short (+ 0x39 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-and-rr (s d) (emit-short (+ 0x3a (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-or-rr (s d) (emit-short (+ 0x3b (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-xor-rr (s d) (emit-short (+ 0x3c (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-shl-rr (s d) (emit-short (+ 0x3d (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-shr-rr (s d) (emit-short (+ 0x3e (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-asr-rr (s d) (emit-short (+ 0x3f (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-lnot-rr (r d) (emit-short (+ 0x40 (<< (reg d) 8) (<< (reg r) 12))))
(defun emit-land-rr (s d) (emit-short (+ 0x41 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-swp-rr (s d) (emit-short (+ 0x42 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-ext-rr (s d) (emit-short (+ 0x43 (<< (reg d) 8) (<< (reg s) 12))))
(defun emit-div-rrr (s d1 d2) (emit-short (+ 0x44 (<< (reg d1) 8) (<< (reg d2) 12)) (reg s)))
(defun emit-div-rrr-u (s d1 d2) (emit-short (+ 0x45 (<< (reg d1) 8) (<< (reg d2) 12)) (reg s)))

(defun emit-push (&rest b))
(defun emit-pop (&rest b))

(defun emit-beq (l d))
(defun emit-bne (l d))
(defun emit-bge (l d))
(defun emit-blt (l d))
(defun emit-bgt (l d))
(defun emit-ble (l d))

(defun emit-seq-cr (c d))
(defun emit-sne-cr (c d))
(defun emit-slt-cr (c d))
(defun emit-sle-cr (c d))
(defun emit-sgt-cr (c d))
(defun emit-sge-cr (c d))

(defun emit-seq-rr (s d))
(defun emit-sne-rr (s d))
(defun emit-slt-rr (s d))
(defun emit-sle-rr (s d))
(defun emit-sgt-rr (s d))
(defun emit-sge-rr (s d))

(defun emit-call (l))
(defun emit-call-r (r))
(defun emit-call-i (d c))
(defun emit-call-p (l))
(defun emit-jmp (l d))
(defun emit-jmp-r (r))
(defun emit-jmp-i (d c))
(defun emit-jmp-p (l))

(defun emit-lea-i (s c d))
(defun emit-lea-d (s1 s2 d))
(defun emit-lea-p (l d))

(defun emit-cpy-ir (s c d))
(defun emit-cpy-ir-b (s c d))
(defun emit-cpy-ir-s (s c d))
(defun emit-cpy-ir-i (s c d))

(defun emit-cpy-ri (s d c))
(defun emit-cpy-ri-b (s d c))
(defun emit-cpy-ri-s (s d c))
(defun emit-cpy-ri-i (s d c))

(defun emit-cpy-ir-ub (s c d))
(defun emit-cpy-ir-us (s c d))
(defun emit-cpy-ir-ui (s c d))

(defun emit-cpy-rd (s d1 d2))
(defun emit-cpy-rd-b (s d2 d1))
(defun emit-cpy-rd-s (s d2 d1))
(defun emit-cpy-rd-i (s d2 d1))

(defun emit-cpy-dr (s1 s2 d))
(defun emit-cpy-dr-b (s1 s2 d))
(defun emit-cpy-dr-s (s1 s2 d))
(defun emit-cpy-dr-i (s1 s2 d))
(defun emit-cpy-dr-ub (s1 s2 d))
(defun emit-cpy-dr-us (s1 s2 d))
(defun emit-cpy-dr-ui (s1 s2 d))

(defun emit-cpy-rp (d l))
(defun emit-cpy-pr (l d))

(defun emit-alloc (c) (emit-sub-cr (align c stack_align) rsp))
(defun emit-free (c) (emit-add-cr (align c stack_align) rsp))
(defun emit-ret ())
