(include 'sys/func.inc)
(include 'sys/mail/class.inc)
(include 'class/str/class.inc)
(include 'class/array/class.inc)
(include 'class/num/class.inc)
(include 'class/lisp/class.inc)

(def-method 'sys_mail 'lisp_mymail)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_mail 'lisp_mymail '(r0 r1))

(errorcases
	(class/array/get_length r1 r2)
	(gotoif '(r2 != 0) 'error))

	(vp-cpy-rr r0 r6)
	(call 'sys_mail 'mymail nil '(r0 _))
	(call 'sys_mail 'free_obj '(r0) '(r0 _ _))

	(exit 'sys_mail 'lisp_mymail '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(mail-mymail)" error_msg_wrong_types r1)))

(def-func-end)

(def-method 'sys_mail 'lisp_trymail)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_mail 'lisp_trymail '(r0 r1))

(errorcases
	(class/array/get_length r1 r2)
	(gotoif '(r2 != 0) 'error))

	(vp-cpy-rr r0 r6)
	(call 'sys_mail 'trymail nil '(r0 _))
	(vpif '(r0 != 0))
		(call 'sys_mail 'free_obj '(r0) '(r0 _ _))
	(else)
		(call 'obj 'ref '((r6 lisp_sym_nil)) '(r0))
	(endif)

	(exit 'sys_mail 'lisp_trymail '(r6 r0))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r0 "(mail-trymail)" error_msg_wrong_types r1)))

(def-func-end)

(def-method 'sys_mail 'lisp_send)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(ptr 'this 'args 'value)
	(ulong 'arg0 'arg1 'arg2)

	(push-scope)
	(entry 'sys_mail 'lisp_send {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2} '(r1))
	(gotoif '(r1 == 0) 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'obj 'inst_of (cat {arg0, @} (f-path 'str 'vtable)))
	(vpif (list (method-output 'obj 'inst_of 1) '!= 0))
		(call 'sys_mail 'alloc_obj {arg0, &arg0->str_data, arg0->str_length} {arg2})
		(goto 'sendit)
	(endif)
	(call 'obj 'inst_of (cat {arg0, @} (f-path 'vector 'vtable)))
	(vpif (list (method-output 'obj 'inst_of 1) '!= 0))
		(call 'sys_mail 'alloc_obj {arg0, arg0->array_begin, arg0->array_length * long_size} {arg2})
		(goto 'sendit)
	(endif)
	(call 'obj 'inst_of (cat {arg0, @} (f-path 'array 'vtable)))
	(errorif (list (method-output 'obj 'inst_of 1) '== 0) 'error1)
	(call 'str 'create_from_buffer {arg0->array_begin, arg0->array_length * long_size} {value})
	(call 'sys_mail 'alloc_obj {value, &value->str_data, value->str_length} {arg2})
	(call 'obj 'deref {value})
(vp-label 'sendit)
	(assign {arg1} {arg2->msg_dest.id_id})
	(call 'sys_mail 'send {arg2})
	(call 'obj 'ref {arg0} {value})

	(exit 'sys_mail 'lisp_send {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error {this, "(mail-send obj mbox)", error_msg_wrong_types, args})
	(signature 'sig 'obj 'num))

	(pop-scope-syms)

(def-func-end)

(def-method 'sys_mail 'lisp_declare)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_mail 'lisp_declare '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 2) '(r1))
	(gotoif '(r1 == 0) 'error))

	(class/array/get_begin r7 r2)
	(call 'obj 'ref '((r2 0)) '(r0))
	(vp-cpy-ir r2 ptr_size r1)
	(vp-push r6 r0)
	(call 'sys_mail 'declare '((& r0 str_data) (r1 num_value)))
	(vp-pop r0 r1)

	(exit 'sys_mail 'lisp_declare '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(mail-declare name mbox)" error_msg_wrong_types r7))
	(signature 'sig 'str 'num))

(def-func-end)

(def-method 'sys_mail 'lisp_enquire)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;all but r0

	(entry 'sys_mail 'lisp_enquire '(r6 r7))

(errorcases
	(call 'lisp 'env_args_type '(r7 ($ sig) 1) '(r1))
	(gotoif '(r1 == 0) 'error))

	(vp-push r6)
	(class/array/get_begin r7 r0)
	(vp-cpy-ir r0 0 r0)
	(call 'sys_mail 'enquire '((& r0 str_data)) '(r0))
	(vpif '(r0 != 0))
		(call 'num 'create '(r0) '(r0))
	(else)
		(vp-cpy-ir rsp 0 r0)
		(call 'obj 'ref '((r0 lisp_sym_nil)) '(r0))
	(endif)
	(vp-cpy-rr r0 r1)
	(vp-pop r0)

	(exit 'sys_mail 'lisp_enquire '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp 'repl_error '(r6 "(mail-enquire name)" error_msg_wrong_types r7))
	(signature 'sig 'str))

(def-func-end)
